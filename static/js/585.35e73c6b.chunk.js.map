{"version":3,"file":"static/js/585.35e73c6b.chunk.js","mappings":"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","sources":["Pages/ContactsPage/ContactsPage.styled.jsx","Components/ContactList/ContactList.styled.jsx","Components/ContactItem/ContactItem.styled.jsx","Components/ContactItem/ContactItem.jsx","Components/ContactList/ContactList.jsx","Components/ContactForm/ContactForm.styled.jsx","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Pages/ContactsPage/ContactsPage.jsx","Pages/RegisterPage/RegisterPage.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const PageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Heading = styled.h1`\n  margin-bottom: 10px;\n  text-align: center;\n  font-weight: 500;\n`;\nexport const ContactsSection = styled.h2`\n  margin-bottom: 10px;\n  \n`;\nexport const Section = styled.div`\n  /* width: 500px;\n  border: 1px solid #000000;\n  padding: 15px;\n  margin-bottom: 20px; */\n  /* margin-right: 0 auto;\n  margin-left: 0 auto; */\n`;\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n`;\n","import styled from '@emotion/styled';\nexport const Item = styled.li`\n display: flex;\njustify-content: space-evenly;\n&:not(:last-child) {\n  margin-bottom: 5px;\n}\n`;\nexport const Contact = styled.p``;\n \nexport const Button = styled.button`\n  margin-left: auto;\n  margin-bottom: 5px;\n  border-radius: 15px 225px 255px 15px 15px 255px 225px 15px;\n  border-style: solid;\n  border-width: 2px;\n  box-shadow: rgba(0, 0, 0, .2) 15px 28px 25px -18px;\n  box-sizing: border-box;\n  color: #41403e;\n  cursor: pointer;\n  display: inline-block;\n  font-family: Neucha, sans-serif;\n  font-size: 0.7rem;\n  outline: none;\n  padding: 2px 15px;\n  text-decoration: none;\n  transition: all 235ms ease-in-out;\n  border-bottom-left-radius: 15px 255px;\n  border-bottom-right-radius: 225px 15px;\n  border-top-left-radius: 255px 15px;\n  border-top-right-radius: 15px 225px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  &:hover {\n    cursor: pointer;\n    background-color: #cc2b2b;\n    box-shadow: rgba(0, 0, 0, .3) 2px 8px 8px -5px;\n    transform: translate3d(0, 2px, 0);\n  }\n  &:focus {\n    box-shadow: rgba(0, 0, 0, .3) 2px 8px 4px -6px;\n  } \n`;\n\n\n","import { useDeleteContactMutation } from 'redux/contacts/contacts -api';\nimport { BiTrash } from \"react-icons/bi\";\nimport {  Button, Item, Contact } from './ContactItem.styled';\n\nconst ContactItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: deletingContact }] = useDeleteContactMutation();\n\n  const handleDelete = () => {\n    deleteContact(id);\n  };\n  \n  return (\n     <Item key={id}>\n      <Contact>\n        {name}:{number}\n      </Contact>\n      <Button type=\"button\" onClick={handleDelete} disabled={deletingContact}>\n        <BiTrash />\n      </Button>\n    </Item>\n  );\n};\n\nexport default ContactItem;","import { ContactsList } from './ContactList.styled';\nimport ContactItem from '../ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { getFilter} from 'redux/contacts/contacts-slice';\nimport { useGetContactsQuery } from 'redux/contacts/contacts -api';\nimport { Spinner } from 'Components/Spinner/Spinner';\nimport { Error } from 'Pages/RegisterPage/RegisterPage.styled';\n\nconst ContactList = () => {\n  const { data: contacts, isLoading, error } = useGetContactsQuery();\n  const filter = useSelector(getFilter);\n\n  const filterContacts = () =>{ \n        return (\n      contacts && contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase())));\n  };\n\n  const contactBook = filterContacts();\n  const filteredContacts = contacts && !isLoading && contactBook.length > 0;\n\n  return (\n    <ContactsList>\n      {filteredContacts && contactBook.map(({ id, name, number}) =>(\n          <ContactItem\n          id={id}\n          key={id}\n          name={name}\n          number={number}\n          />\n      ))}\n      {isLoading && <Spinner />}\n      {error && <Error>You have some problems.</Error>}\n      </ContactsList>\n  )\n};\n      \nexport default ContactList;","import styled from '@emotion/styled';\n\nexport const FormWrapper = styled.div`\n  width: 480px;\n  border: 1px solid #000000;\n  padding: 15px;\n  margin-bottom: 20px;\n`;\n\nexport const Form = styled.form``;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 5px;\n  border-radius: 15px 225px 255px 15px 15px 255px 225px 15px;\n  border-style: solid;\n  border-width: 2px;\n  box-shadow: rgba(0, 0, 0, .2) 15px 28px 25px -18px;\n  box-sizing: border-box;\n  color: #41403e;\n  cursor: pointer;\n  display: inline-block;\n  font-family: Neucha, sans-serif;\n  font-size: 0.8rem;\n  outline: none;\n  padding: 3px 14px;\n  text-decoration: none;\n  transition: all 235ms ease-in-out;\n  border-bottom-left-radius: 15px 255px;\n  border-bottom-right-radius: 225px 15px;\n  border-top-left-radius: 255px 15px;\n  border-top-right-radius: 15px 225px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  &:hover {\n    cursor: pointer;\n    background-color: #56c064;\n    font-weight: 700;\n  }\n`;\n","import { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { FormWrapper, Form, Label, Input, Button } from './ContactForm.styled';\nimport { useCreateContactMutation, useGetContactsQuery } from 'redux/contacts/contacts -api';\n\nconst ContactForm = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const [createContact] = useCreateContactMutation();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n    const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  \n  const addNewContact = data => {\n    const normalizedContacts = contacts?.map(contact => contact.name.toLowerCase());\n    const isInPhonebook = normalizedContacts?.includes(data.name.toLowerCase());\n    if (!isInPhonebook) {\n      createContact(data);\n      reset();\n      toast.success(`${name} is successfully added!`);\n    } else {\n      toast.error(`${name} is already in contacts.`);\n    }\n  };\n\n  const handleChange = evt => {\n    if (evt.target.name === 'name') {\n      setName(evt.target.value)\n    } else {\n      setNumber(evt.target.value)\n    }\n  };\n   \n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const contact = { name, number };\n    addNewContact(contact);\n  };\n\n\n  return (\n    <FormWrapper>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n        </Label>\n\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={number}\n            onChange={handleChange}\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </FormWrapper>\n  );\n}\nexport default ContactForm;\n\n","import styled from '@emotion/styled';\n\nexport const FormWrapper = styled.div`\n  width: 480px;\n  border: 1px solid #000000;\n  padding: 15px;\n  margin-bottom: 20px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\nexport const Input = styled.input`\n  width: 200px;\n`;\n","import { getFilter, filter } from 'redux/contacts/contacts-slice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormWrapper, Label, Input } from './Filter.styled';\n\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterSelector = useSelector(getFilter);\n  const handleChange = evt => dispatch(filter(evt.currentTarget.value.trim()));\n  return (\n    <FormWrapper>\n      <Label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={filterSelector}\n          onChange={handleChange}\n        />\n      </Label>\n    </FormWrapper>\n  );\n};\nexport default Filter;","import { useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth';\nimport { PageContainer, Section, Heading, ContactsSection } from './ContactsPage.styled';\nimport ContactList from 'Components/ContactList/ContactList';\nimport ContactForm from 'Components/ContactForm/ContactForm';\nimport Filter from 'Components/Filter/Filter';\nimport { Error } from 'Pages/RegisterPage/RegisterPage.styled';\nimport './ContactsPageGlobalStyle.css';\n\n\n\nconst ContactsPage = () => {\n    const error = useSelector(authSelectors.getUserError);\n\n    return (\n        <PageContainer>\n            <Section>\n                <Heading>Phonebook</Heading>\n                <ContactForm />\n                <ContactsSection ></ContactsSection>\n                <Filter />\n                <ContactList />\n                {error && <Error>{error}</Error>}\n            </Section>\n        </PageContainer>\n    );\n};\nexport default ContactsPage;","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n\n`;\nexport const Heading = styled.h2`\n    text-align: center;\n    font-size: 30px;\n`\n\nexport const Form = styled.form`\nmargin-left: 25px;\ndisplay: flex;\nflex-direction:column;\nalign-items: center;\n\n`;\nexport const Label = styled.label`\nmargin-bottom: 15px;\n`;\n \nexport const Input = styled.input`\nwidth: 280px;\nheight: 25px;\npadding-left: 10px;\n`;\n\nexport const Button = styled.button`\nmargin-bottom: 20px;\n  border-radius: 15px 225px 255px 15px 15px 255px 225px 15px;\n  border-style: solid;\n  border-width: 2px;\n  box-shadow: rgba(0, 0, 0, .2) 15px 28px 25px -18px;\n  box-sizing: border-box;\n  color: #41403e;\n  cursor: pointer;\n  display: inline-block;\n  font-family: Neucha, sans-serif;\n  font-size: 0.8rem;\n  outline: none;\n  padding: 3px 14px;\n  text-decoration: none;\n  transition: all 235ms ease-in-out;\n  border-bottom-left-radius: 15px 255px;\n  border-bottom-right-radius: 225px 15px;\n  border-top-left-radius: 255px 15px;\n  border-top-right-radius: 15px 225px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  &:hover {\n    color: #fff;\n    border-color: transparent;\n    background-color: #252525;\n  }\n`;\n\nexport const Error = styled.p`\n    text-align: center;\n    font-size: 20px;\n    color: #d61212;\n`"],"names":["PageContainer","styled","Heading","ContactsSection","Section","ContactsList","Item","Contact","Button","id","name","number","useDeleteContactMutation","deleteContact","deletingContact","isLoading","type","onClick","disabled","useGetContactsQuery","contacts","data","error","filter","useSelector","getFilter","contactBook","contact","toLowerCase","includes","filteredContacts","length","map","Spinner","FormWrapper","Form","Label","Input","useCreateContactMutation","createContact","useState","setName","setNumber","addNewContact","normalizedContacts","toast","handleChange","evt","target","value","onSubmit","preventDefault","pattern","title","onChange","required","dispatch","useDispatch","filterSelector","currentTarget","trim","authSelectors","Wrapper","Error"],"sourceRoot":""}