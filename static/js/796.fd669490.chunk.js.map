{"version":3,"file":"static/js/796.fd669490.chunk.js","mappings":"qNA+FA,UAxFqB,WACjB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,cAQpBC,EAAe,SAAAC,GACjB,MAAwBA,EAAIC,OAApBb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,MACd,OAAQd,GACJ,IAAK,OACDC,EAAQa,GACR,MACJ,IAAK,QACDX,EAASW,GACT,MACJ,IAAK,WACDT,EAAYS,GACZ,MACJ,QACI,SAaZ,OACI,UAAC,KAAD,YACI,SAAC,KAAD,4BAEA,UAAC,KAAD,CAAMC,SAbO,SAAAH,GAEjB,GADAA,EAAII,iBACS,KAAThB,GAAyB,KAAVE,GAA6B,KAAbE,EAC/B,OAAOa,EAAAA,EAAAA,IAAM,+CAEjBX,EAASY,EAAAA,GAAAA,SAAwB,CAAElB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KA3BhDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAiCR,WACI,SAAC,KAAD,WAEI,SAAC,KAAD,CACIc,KAAK,OACLnB,KAAK,OACLc,MAAOd,EACPoB,SAAUT,EACVU,aAAa,MACbC,WAAS,EACTC,YAAY,YAIpB,SAAC,KAAD,WAEI,SAAC,KAAD,CACIJ,KAAK,QACLnB,KAAK,QACLc,MAAOZ,EACPkB,SAAUT,EACVU,aAAa,MACbE,YAAY,cAIpB,SAAC,KAAD,WAEI,SAAC,KAAD,CACIJ,KAAK,WACLnB,KAAK,WACLc,MAAOV,EACPgB,SAAUT,EACVU,aAAa,MACbE,YAAY,gBAIpB,SAAC,KAAD,CAAQJ,KAAK,SAAb,qBACCX,IAAS,SAAC,KAAD,UAAQA,Y,2OCvFrBgB,EAAUC,EAAAA,EAAAA,IAAH,0BAGPC,EAAUD,EAAAA,EAAAA,GAAH,uEAKPE,EAAOF,EAAAA,EAAAA,KAAH,4GAOJG,EAAQH,EAAAA,EAAAA,MAAH,8CAILI,EAAQJ,EAAAA,EAAAA,MAAH,2EAMLK,EAASL,EAAAA,EAAAA,OAAH,2yBA8BNM,EAAQN,EAAAA,EAAAA,EAAH","sources":["Pages/RegisterPage/RegisterPage.jsx","Pages/RegisterPage/RegisterPage.styled.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authSelectors } from \"redux/auth\";\nimport { authOperations } from \"redux/auth\";\nimport { Wrapper, Form, Label, Input, Button, Heading, Error } from \"./RegisterPage.styled\";\n\nconst RegisterPage = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useDispatch();\n    const error = useSelector(authSelectors.getUserError);\n\n    const resetForm = () => {\n        setName('');\n        setEmail('');\n        setPassword('');\n    }\n\n    const handleChange = evt => {\n        const { name, value } = evt.target;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'email':\n                setEmail(value);\n                break;\n            case 'password':\n                setPassword(value);\n                break;\n            default:\n                return;\n        }\n    }\n    \n    const handleSubmit = evt => {\n        evt.preventDefault();\n        if (name === '' || email === '' || password === '') {\n            return toast('Please correct the highlighted fields below')\n        }\n        dispatch(authOperations.register({ name, email, password }));\n        resetForm();\n    };\n\n    return (\n        <Wrapper>\n            <Heading>Registration</Heading>\n\n            <Form onSubmit={handleSubmit}>\n                <Label>\n                    \n                    <Input\n                        type='text'\n                        name='name'\n                        value={name}\n                        onChange={handleChange}\n                        autoComplete='off'\n                        autoFocus\n                        placeholder=\"Name\"\n                        />\n                </Label>\n\n                <Label>\n                   \n                    <Input\n                        type='email'\n                        name='email'\n                        value={email}\n                        onChange={handleChange}\n                        autoComplete='off'\n                        placeholder=\"E-mail\"\n                />\n                </Label>\n\n                <Label>\n                    \n                    <Input\n                        type='password'\n                        name='password'\n                        value={password}\n                        onChange={handleChange}\n                        autoComplete='off'\n                        placeholder=\"Password\"\n                        />\n                </Label>\n\n                <Button type=\"submit\">Sign Up</Button>\n                {error && <Error>{error}</Error>}\n            </Form>\n        </Wrapper>\n    );\n};\n\nexport default RegisterPage;\n    \n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n\n`;\nexport const Heading = styled.h2`\n    text-align: center;\n    font-size: 30px;\n`\n\nexport const Form = styled.form`\nmargin-left: 25px;\ndisplay: flex;\nflex-direction:column;\nalign-items: center;\n\n`;\nexport const Label = styled.label`\nmargin-bottom: 15px;\n`;\n \nexport const Input = styled.input`\nwidth: 280px;\nheight: 25px;\npadding-left: 10px;\n`;\n\nexport const Button = styled.button`\nmargin-bottom: 20px;\n  border-radius: 15px 225px 255px 15px 15px 255px 225px 15px;\n  border-style: solid;\n  border-width: 2px;\n  box-shadow: rgba(0, 0, 0, .2) 15px 28px 25px -18px;\n  box-sizing: border-box;\n  color: #41403e;\n  cursor: pointer;\n  display: inline-block;\n  font-family: Neucha, sans-serif;\n  font-size: 0.8rem;\n  outline: none;\n  padding: 3px 14px;\n  text-decoration: none;\n  transition: all 235ms ease-in-out;\n  border-bottom-left-radius: 15px 255px;\n  border-bottom-right-radius: 225px 15px;\n  border-top-left-radius: 255px 15px;\n  border-top-right-radius: 15px 225px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  &:hover {\n    color: #fff;\n    border-color: transparent;\n    background-color: #252525;\n  }\n`;\n\nexport const Error = styled.p`\n    text-align: center;\n    font-size: 20px;\n    color: #d61212;\n`"],"names":["useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","error","useSelector","authSelectors","handleChange","evt","target","value","onSubmit","preventDefault","toast","authOperations","type","onChange","autoComplete","autoFocus","placeholder","Wrapper","styled","Heading","Form","Label","Input","Button","Error"],"sourceRoot":""}